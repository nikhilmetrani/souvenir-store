package sg.edu.nus.iss.se23pt2.pos;
import java.util.List;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.Map;

import javax.swing.AbstractListModel;

//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : SouvenirStore
//  @ File Name : Inventory.java
//  @ Date : 3/8/2015
//  @ Author : Nikhil Metrani
//
//



/** */
public class Inventory {
    /** */
	private Map<String, Category>   categories;
    private Map<String, Product>    products;
    private Map<String, Vendor>     vendors;
    
    public Inventory () {
    	this(null, null, null);
    }
    
    public Inventory (Map<String, Product> products, Map<String, Category> categories, Map<String, Vendor> vendors) {
    	this.products = products;
    	this.categories = categories;
    	this.vendors = vendors;
    }
    
    /** */
    public ArrayList<Product> getAllProducts() {
    	//TO-DO
    	ArrayList<Product> pr = new ArrayList<Product>();
    	return pr;
    }
    
    /** */
    public Product getProduct(String prodId) {
    	//TO-DO
    	Product pr = new Product();
    	return pr;
    }
    
    /** */
    public ArrayList<Product> getProducts(String catId) {
    	//TO-DO
    	ArrayList<Product> pr = new ArrayList<Product>();
    	return pr;
    }
    
    /** */
    public ArrayList<Product> getProductsBelowThresholdQuantity() {
    	//TO-DO
    	ArrayList<Product> pr = new ArrayList<Product>();
    	return pr;
    }
    
    /** */
    public ArrayList<Product> getProductsBelowThresholdQuantity(String catId) {
    	//TO-DO
    	ArrayList<Product> pr = new ArrayList<Product>();
    	return pr;
    }
    
    /** */
    public Product addProduct(String catId, String name) {
    	//TO-DO
    	Product pr = new Product();
    	return pr;
    }
    
    /** */
    public Product removeProduct(String prodId, Integer quantity) {
    	//TO-DO
    	Product pr = new Product();
    	return pr;
    }
    
    /** */
    public PurchaseOrder generatePurchaseOrder() {
    	//TO-DO
    	PurchaseOrder pr = new PurchaseOrder();
    	return pr;
    }
    
    /** */
    public PurchaseOrder generatePurchaseOrder(String catId) {
    	//TO-DO
    	PurchaseOrder pr = new PurchaseOrder();
    	return pr;
    }
    
    /** */
    public List<Category> getAllCategories() {
    	//TO-DO
    	if (null == this.categories)
    		return null;
    	ArrayList<Category> c = new ArrayList<Category>();
    	Iterator<Category> ic = this.categories.values().iterator();
    	while (ic.hasNext()) {
    		c.add(ic.next());
    	}
    	return c;
    }
    
    /** */
    public Category addCategory(String catId, String name) {
    	//TO-DO
    	Category cat = new Category(catId, name);
    	return this.addCategory(cat);
    }
    
    /** */
    public Category addCategory(Category category) {
    	//TO-DO
    	if (this.categories.containsKey(category.getCode()))
    		return this.categories.get(category.getCode());
    	this.categories.put(category.getCode(), category);
    	return category;
    }
    
}
