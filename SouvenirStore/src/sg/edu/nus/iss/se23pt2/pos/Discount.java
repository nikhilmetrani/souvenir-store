package sg.edu.nus.iss.se23pt2.pos;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;

import sg.edu.nus.iss.se23pt2.pos.exception.VendorExistsException;

//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : SouvenirStore
//  @ File Name : Discount.java
//  @ Date : 15/03/2015
//  @ Author : Niu Yiming
//	@ Date : 19/03/2015
//  @ Author : Debasish Routaray(implemented toString() method)
//

public class Discount
{
	private String discCode;
	private String discDesc;
	private String startDate;
	private String periodInDays;
	private double discPct;
	private String appTo;
	
    public Discount(String discCode, String discDesc, String startDate, String periodInDays, double discPct, String appTo)
    {
    	this.discCode = discCode;
    	this.discDesc = discDesc;	
    	this.startDate = startDate;
    	this.periodInDays = periodInDays;
    	this.discPct = discPct;
    	this.appTo = appTo;
    }
    
	public String getDiscCode()
	{
	    return discCode;
	}
	
	public String getDiscDesc()
	{
	    return discDesc;
	}
	
	public String getStartDate()
	{
	    return startDate;
	}
	
	public String getPeriodInDays()
	{
	    return periodInDays;
	}
	
	public double getDiscPct()
	{
	    return discPct;
	}
	
	public void setDiscCode(String discCode){
	    this.discCode = discCode;
	}
	public void setDiscDesc(String discDesc){
	    this.discDesc = discDesc;
	}
	public void setStartDate(String startDate){
	    this.startDate = startDate;
	}
	public void setDiscPct(double discPct){
	    this.discPct = discPct;
	}
	public void setPeriodInDays(String periodInDays){
	    this.periodInDays = periodInDays;
	}
	public void setAppTo(String appTo){
	    this.appTo = appTo;
	}
	
	public String getAppTo()
	{
	    return appTo;
	}
	
	// Determine if the discount is applicable only for store members.
	public Boolean isForMemberOnly()
	{
	    if(appTo.equals('M')) return true;
	    else return false;
	}
	
	// To determine the time validity of a certain discount
	public boolean isValid(Discount disc, String transDate) throws ParseException {
			
			Calendar cal = Calendar.getInstance();
	    	SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
	    	int transDateYear = Integer.parseInt(transDate.substring(0, 4));
	    	int transDateMonth = Integer.parseInt(transDate.substring(5, 7));
	    	int transDateDay = Integer.parseInt(transDate.substring(8));
	    	cal.set(transDateYear, transDateMonth, transDateDay);
	    	
			if(disc.getPeriodInDays().equals("ALWAYS"))
				return true;
			else {
				cal.add(cal.DAY_OF_YEAR, Integer.parseInt(disc.getPeriodInDays()));
				if (df.parse(transDate).before(cal.getTime())) {
					return true;
				}
			}
			return false;
		}
	
	public String toString() {		
		StringBuilder stb = new StringBuilder();
				stb = stb.append(this.getDiscCode())
						 .append(",")
						 .append(this.getDiscDesc())
						 .append(",")
						 .append(this.getStartDate())
						 .append(",")
						 .append(this.periodInDays)
						 .append(",")
						 .append(this.getDiscPct())
						 .append(",")
						 .append(this.getAppTo())
						 .append(System.getProperty("line.separator"));			
		return stb.toString();
	}
}
