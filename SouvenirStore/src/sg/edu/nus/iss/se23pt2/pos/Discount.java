//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : SouvenirStore
//  @ File Name : Discount.java
//  @ Date : 06/03/2015
//  @ Author : Jaya Vignesh
//
//

package sg.edu.nus.iss.se23pt2.pos;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;

//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : SouvenirStore
//  @ File Name : Discount.java
//  @ Date : 15/03/2015
//  @ Author : Niu Yiming
//
//

public class Discount
{
	private String discountCode;
	private String description;
	private String startDate;
	private String periodInDays;
	private double discPct;
	private String applicableTo;
	
    public Discount(String discountCode, String description, String startDate, String periodInDays, double discPct, String applicableTo)
    {
    	this.discountCode = discountCode;
    	this.description = description;	
    	this.startDate = startDate;
    	this.periodInDays = periodInDays;
    	this.discPct = discPct;
    	this.applicableTo = applicableTo;
    }
    
	public String getDiscountCode()
	{
	    return discountCode;
	}
	
	public String getDiscountDescription()
	{
	    return description;
	}
	
	public String getStartDate()
	{
	    return startDate;
	}
	
	public String getPeriodInDays()
	{
	    return periodInDays;
	}
	
	public double getDiscPct()
	{
	    return discPct;
	}
	
	public void setDiscPct(double discPct){
	    this.discPct = discPct;
	}
	
	public String getApplicableTo()
	{
	    return applicableTo;
	}
	
	// Determine if the discount is applicable only for store members.
	public Boolean isForMemberOnly()
	{
	    if(applicableTo.equals('M')) return true;
	    else return false;
	}
	
	// To determine the time validity of a certain discount
	public boolean isValid(Discount disc, String transDate) throws ParseException {
			
			Calendar cal = Calendar.getInstance();
	    	SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
	    	int transDateYear = Integer.parseInt(transDate.substring(0, 4));
	    	int transDateMonth = Integer.parseInt(transDate.substring(5, 7));
	    	int transDateDay = Integer.parseInt(transDate.substring(8));
	    	cal.set(transDateYear, transDateMonth, transDateDay);
	    	
			if(disc.getPeriodInDays().equals("ALWAYS"))
				return true;
			else {
				cal.add(cal.DAY_OF_YEAR, Integer.parseInt(disc.getPeriodInDays()));
				if (df.parse(transDate).before(cal.getTime())) {
					return true;
				}
			}
			return false;
		}
}
