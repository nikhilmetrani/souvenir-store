//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : SouvenirStore
//  @ File Name : TransactionDS.java
//  @ Date : 06/03/2015
//  @ Author : Rushabh Shah
//
//

package sg.edu.nus.iss.se23pt2.pos.datastore;

import java.io.IOException;
import java.nio.file.AccessDeniedException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;

import sg.edu.nus.iss.se23pt2.pos.Customer;
import sg.edu.nus.iss.se23pt2.pos.Item;
import sg.edu.nus.iss.se23pt2.pos.Product;
import sg.edu.nus.iss.se23pt2.pos.SouvenirStore;
import sg.edu.nus.iss.se23pt2.pos.Transaction;
import sg.edu.nus.iss.se23pt2.pos.exception.DataLoadFailedException;

public class TransactionDS extends DataStore
{
    private static final String fileName = "Transaction.dat";

    public TransactionDS () throws AccessDeniedException, IOException {
        super(fileName);
    }

	@Override
	public ArrayList<Transaction> load(SouvenirStore store)
			throws DataLoadFailedException {
		String line;
        String[] elements;
        ArrayList<Transaction> transactions ;
        Transaction transaction;
        Map<String,Transaction> transactionMap  = new HashMap<String, Transaction>();
        ArrayList<Item> items;
        String transactionId,custId,productId,date;
        int quantityPurchased;
		try {
            while ((line = this.read()) != null) {
            	if(line.length()>0){
            	 elements = line.split(",");
                 if(elements!=null){                	
                	transactionId = elements[0];
                	productId = elements[1];
                	custId = elements[2];
                	quantityPurchased = new Integer(elements[3]);
                	date = elements[4];
                	transaction = new Transaction();
                	transaction.setId(new Integer(transactionId));
                	Customer cust = new Customer();
                	cust.setId(custId);
                	transaction.setCustomer(cust);
                	transaction.setDate(date);                	
                	Item item = new Item();
                	Product product = new Product();  
                	product.setId(productId);
                	item.setProduct(product);
                	item.setQuantity(quantityPurchased);
                	if(transactionMap.containsKey(transactionId)){
                		items = transactionMap.get(transactionId).getItems();
                	}else{
                		items = new ArrayList<Item>();
                	}
                	items.add(item);
                	transaction.setItems(items);
                	transactionMap.put(transactionId, transaction);                	
                 }
              } 	
           }
            transactions =  new ArrayList<Transaction>(transactionMap.values());
        } catch (IOException e) {
            throw new DataLoadFailedException(e.getMessage());
        } finally {
            this.close();
        }
		return transactions;
	}

	
	 @Override
	    protected <T> boolean matchData (T obj, String line) {
		  if(obj!=null && line!=null && line.length()>0){
	        int key = ((Transaction) obj).getId();
	         if (line.indexOf(key + ",") == 0){
	            return true;
	         }
		  }
	       return false;
	    }
}
